"""update settings

Revision ID: 6beda6e28b39
Revises: 7a186f26265b
Create Date: 2024-07-08 11:47:37.753294

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6beda6e28b39'
down_revision: Union[str, None] = '7a186f26265b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('npc')
    op.drop_table('interaction')
    op.drop_table('exhibit')
    op.drop_table('exhibit_group')
    op.drop_table('time')
    op.drop_table('area')
    op.drop_table('answer')
    op.drop_table('test')
    op.drop_table('questionnaire')
    op.drop_table('visitor')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('test',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('question', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='test_pkey'),
    sa.UniqueConstraint('id', name='test_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exhibit',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('introduction', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('number', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('timeID', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('exhibitGroupID', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['exhibitGroupID'], ['exhibit_group.id'], name='exhibit_exhibitGroupID_fkey'),
    sa.ForeignKeyConstraint(['timeID'], ['time.id'], name='exhibit_timeID_fkey'),
    sa.PrimaryKeyConstraint('id', name='exhibit_pkey'),
    sa.UniqueConstraint('id', name='exhibit_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exhibit_group',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('timeID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['timeID'], ['time.id'], name='exhibit_group_timeID_fkey'),
    sa.PrimaryKeyConstraint('id', name='exhibit_group_pkey'),
    sa.UniqueConstraint('id', name='exhibit_group_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('questionnaire',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('interactionScore', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('educationScore', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('entertainmentScore', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('overallScore', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('willVisitAgain', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('visitorID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['visitorID'], ['visitor.id'], name='questionnaire_visitorID_fkey'),
    sa.PrimaryKeyConstraint('id', name='questionnaire_pkey'),
    sa.UniqueConstraint('id', name='questionnaire_id_key')
    )
    op.create_table('time',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('introduction', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('areaID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['areaID'], ['area.id'], name='time_areaID_fkey'),
    sa.PrimaryKeyConstraint('id', name='time_pkey'),
    sa.UniqueConstraint('id', name='time_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('answer',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('isCorrect', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('testID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('visitorID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['testID'], ['test.id'], name='answer_testID_fkey'),
    sa.ForeignKeyConstraint(['visitorID'], ['visitor.id'], name='answer_visitorID_fkey'),
    sa.PrimaryKeyConstraint('id', name='answer_pkey'),
    sa.UniqueConstraint('id', name='answer_id_key')
    )
    op.create_table('visitor',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('age', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('count', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='visitor_pkey'),
    sa.UniqueConstraint('id', name='visitor_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('interaction',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('visitorID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('exhibitID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['exhibitID'], ['exhibit.id'], name='interaction_exhibitID_fkey'),
    sa.ForeignKeyConstraint(['visitorID'], ['visitor.id'], name='interaction_visitorID_fkey'),
    sa.PrimaryKeyConstraint('id', name='interaction_pkey'),
    sa.UniqueConstraint('id', name='interaction_id_key')
    )
    op.create_table('area',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('introduction', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='area_pkey'),
    sa.UniqueConstraint('id', name='area_id_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('npc',
    sa.Column('id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('updated', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('introduction', sa.VARCHAR(length=500), autoincrement=False, nullable=False),
    sa.Column('exhibitID', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['exhibitID'], ['exhibit.id'], name='npc_exhibitID_fkey'),
    sa.PrimaryKeyConstraint('id', name='npc_pkey')
    )
    # ### end Alembic commands ###
